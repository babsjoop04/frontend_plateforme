import { List } from "flowbite-react";
import React from "react";

const FormDemandeExploitant = ({ change }) => {
  return (
    <div className="grid w-4/5 mx-auto py-5 grid-cols-2 gap-8 ">
      <div>
        <label
          htmlFor="nom"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Nom
        </label>
        <input
          type="text"
          id="nom"
          name="nom"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          placeholder=""
          required
          onChange={(e) => change(e)}
          // defaultValue={userData.nom}
        />
        {/* {errors.nom !== "" && (
            <div className="  my-2 text-sm font-medium  ">
              <Alert color="failure" icon={Info}>
                {errors.nom}
              </Alert>
            </div>
          )} */}
      </div>
      <div>
        <label
          htmlFor="adresse"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Adresse
        </label>
        <input
          type="text"
          id="adresse"
          name="adresse"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          placeholder=""
          required
          onChange={(e) => change(e)}
          // defaultValue={userData.adresse}
        />
        {/* {errors.adresse !== "" && (
            <div className="  my-2 text-sm font-medium  ">
              <Alert color="failure" icon={Info}>
                {errors.adresse}
              </Alert>
            </div>
          )} */}
      </div>
      <div>
        <label
          htmlFor="numero_agrement"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Numero d'agrement
        </label>
        <input
          type="text"
          id="numero_agrement"
          name="numero_agrement"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          placeholder=""
          required
          onChange={(e) => change(e)}
          // defaultValue={userData.numero_agrement}
        />
        {/* {errors.numero_agrement !== "" && (
            <div className="  my-2 text-sm font-medium  ">
              <Alert color="failure" icon={Info}>
                {errors.numero_agrement}
              </Alert>
            </div>
          )} */}
      </div>
      <div>
        <label
          htmlFor="date_agrement"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Date d'agrement
        </label>
        <input
          type="date"
          id="date_agrement"
          name="date_agrement"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          placeholder=""
          required
          onChange={(e) => change(e)}
          // defaultValue={userData.date_agrement}
        />
        {/* {errors.date_agrement !== "" && (
            <div className="  my-2 text-sm font-medium  ">
              <Alert color="failure" icon={Info}>
                {errors.date_agrement}
              </Alert>
            </div>
          )} */}
      </div>
      <div className="col-span-2">
        <label
          htmlFor="files"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Fichiers justificatifs
        </label>
        <p className="text-sm mb-3 ">
          Vous devrez fournir :
          <List>
            <List.Item>
              une photocopie legalisée de la carte professionnelle délivrée par
              l'ordre professionnel d'appartenance
            </List.Item>
            <List.Item>At least one lowercase character</List.Item>
            <List.Item>
              une photocopie legalisée de la carte professionnelle délivrée par
              l'établissement de santé ou la structure
            </List.Item>
            <List.Item>
              une photocopie legalisée du contrat de travail signé avec
              l'établissement de santé ou la structure
            </List.Item>
            <List.Item>
              Les fichiers doivent etre compressés au format Zip (Taille max. )
            </List.Item>
          </List>
        </p>

        <input
          type="file"
          id="files"
          name="files"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          required
          accept=".zip"
          onChange={(e) => change(e)}
          // defaultValue={userData.files}
        />
        {/* {errors.files !== "" && (
            <div className="  my-2 text-sm font-medium  ">
              <Alert color="failure" icon={Info}>
                {errors.files}
              </Alert>
            </div>
          )} */}
      </div>
    </div>
  );
};

export default FormDemandeExploitant;
