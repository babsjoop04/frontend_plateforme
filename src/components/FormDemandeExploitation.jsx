import { List } from "flowbite-react";
import { useAuthProvider } from "../utils/AuthContext";
import axios from "axios";
import { useEffect, useState } from "react";

const FormDemandeExploitation = ({ change }) => {
  const { currentUser, changeCurrentUser } = useAuthProvider();
  const [exploitants, setExploitant] = useState([]);

  useEffect(() => {
    axios
      .get("/api/exploitant", {
        // params: {
        //   type_notification: type_notification,
        // },
        headers: {
          "Content-Type": "application/json",

          Authorization: `Bearer ${currentUser.token}`,
          // application/json;
        },
      })
      .then(function (response) {
        // console.log(response.data);
        setExploitant(response.data);

      })
      .catch(function (error) {
        console.log(error);
      });
  }, []);
  return (
    <div className="grid w-4/5 mx-auto py-5 grid-cols-2 gap-8 ">
      <div className="col-span-2 ">
        <label
          htmlFor="exploitant_id"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Exploitant
        </label>

        <select
          // id="suivi_patient"
          name="exploitant_id"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          onChange={(e) => change(e)}
        >
          <option>Veuillez selectionner un exploitant</option>
          {/* <optgroup label="Medicament"> */}
          {[...exploitants].map(({id,nom,numero_agrement}) => {
            return <option value={id}>{nom}, Numero d'agrement : {numero_agrement} </option>;
          })}
          {/* </optgroup> */}
        </select>
      </div>
      
      <div className="col-span-2">
        <label
          htmlFor="files"
          className="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
        >
          Fichiers justificatifs
        </label>
        <p className="text-sm mb-3 ">
          Vous devrez fournir :
          <List>
            <List.Item>
              une photocopie legalisée de la carte professionnelle délivrée par
              l'ordre professionnel d'appartenance
            </List.Item>
            <List.Item>At least one lowercase character</List.Item>
            <List.Item>
              une photocopie legalisée de la carte professionnelle délivrée par
              l'établissement de santé ou la structure
            </List.Item>
            <List.Item>
              une photocopie legalisée du contrat de travail signé avec
              l'établissement de santé ou la structure
            </List.Item>
            <List.Item>
              Les fichiers doivent etre compressés au format Zip (Taille max. )
            </List.Item>
          </List>
        </p>

        <input
          type="file"
          id="files"
          name="files"
          className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          required
          accept=".zip"
          onChange={(e) => change(e)}
          // defaultValue={userData.files}
        />
        {/* {errors.files !== "" && (
            <div className="  my-2 text-sm font-medium  ">
              <Alert color="failure" icon={Info}>
                {errors.files}
              </Alert>
            </div>
          )} */}
      </div>
    </div>
  );
};

export default FormDemandeExploitation;
