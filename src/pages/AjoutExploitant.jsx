import { useEffect, useState } from "react";

import Sidebar from "../partials/Sidebar";
import Header from "../partials/Header";
import FilterButton from "../components/DropdownFilter";
import Datepicker from "../components/Datepicker";
import axios from "axios";
import { useAuthProvider } from "../utils/AuthContext";
// import { Table } from "flowbite-react";
// import FormJustificatifs from "../components/FormJustificatifs";
import FormDemandeExploitant from "../components/FormDemandeExploitant";
import { Button } from "flowbite-react";

const AjoutExploitant = () => {
    const [sidebarOpen, setSidebarOpen] = useState(false);
  const [exploitant, setExploitant] = useState([]);

  const { currentUser, changeCurrentUser } = useAuthProvider();
  const change=(e) =>{
    if (e.target.name === "files") {
        // 
        setExploitant((prevState) => {
                return { ...prevState, files: e.target.files[0] };
              });
        // console.log(e.target.files[0]);
        return;
      }
    // console.log(e.target.name, e.target.value);
    
    setExploitant((prevState) => {
        return { ...prevState, [e.target.name]: e.target.value };
      });

  }

  const effectuerDemande=() =>{
    axios
      .post("/api/exploitant", exploitant,{
        // params: {
        //   type_notification: type_notification,
        // },
        headers: {
          "Content-Type": "application/json",

          Authorization: `Bearer ${currentUser.token}`,
          // application/json;
        },
      })
      .then(function (response) {
        console.log(response.data);
        // setExploitants(response.data);

        // // setTimeout(() => {
        // //   navigate("/");
        // // }, 2500);
      })
      .catch(function (error) {
        console.log(error);
      });
  }

  useEffect(() => {
    // console.log(exploitant);

    // axios
    //   .get("/api/exploitant", {
    //     // params: {
    //     //   type_notification: type_notification,
    //     // },
    //     headers: {
    //       "Content-Type": "application/json",

    //       Authorization: `Bearer ${currentUser.token}`,
    //       // application/json;
    //     },
    //   })
    //   .then(function (response) {
    //     console.log(response.data);
    //     setExploitants(response.data);

    //     // setTimeout(() => {
    //     //   navigate("/");
    //     // }, 2500);
    //   })
    //   .catch(function (error) {
    //     console.log(error);
    //   });


  });

  return (
    <div className="flex h-screen overflow-hidden">
      {/* Sidebar */}
      <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />

      {/* Content area */}
      <div className="relative flex flex-col flex-1 overflow-y-auto overflow-x-hidden">
        {/*  Site header */}
        <Header sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />

        <main className="grow">
          <div className="px-4 sm:px-6 lg:px-8 py-8 w-full max-w-9xl mx-auto">
            {/* Dashboard actions */}
            <div className="sm:flex sm:justify-between sm:items-center mb-8">
              {/* Left: Title */}
              <div className="mb-4 sm:mb-0">
                <h1 className="text-2xl md:text-3xl text-gray-800 dark:text-gray-100 font-bold">
                  Demande d'ajout d'exploitant
                </h1>
              </div>

              {/* Right: Actions */}
              <div className="grid grid-flow-col sm:auto-cols-max justify-start sm:justify-end gap-2">
                {/* Filter button */}
                <FilterButton align="right" />
                {/* Datepicker built with flatpickr */}
                <Datepicker align="right" />
                {/* Add view button */}
                <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
                  <svg
                    className="fill-current shrink-0 xs:hidden"
                    width="16"
                    height="16"
                    viewBox="0 0 16 16"
                  >
                    <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
                  </svg>
                  <span className="max-xs:sr-only">Add View</span>
                </button>
              </div>
            </div>

            {/* Cards */}
            <section className=" w-full px-10 py-10 mx-auto rounded-xl bg-white dark:bg-gray-800">
              {/* grid grid-cols-3 gap-6 */}
              <FormDemandeExploitant change={change} />

              <div className="my-10 w-4/5 mx-auto  flex justify-center">
              <Button
                color="blue"
                size="sm"
                // disabled={isFirstStep}
                onClick={() =>{
                    effectuerDemande()
                }}
              >
                {/* {!traitement && <FilePen />} */}

                {/* <MoveLeft /> */}
                Effectuer la demande
              </Button>

              
            </div>
              
            </section>
          </div>
        </main>

        {/* <Banner /> */}
      </div>
    </div>
  );
};

export default AjoutExploitant;