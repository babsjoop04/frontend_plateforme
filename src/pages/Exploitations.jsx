import { useEffect, useState } from "react";

import Sidebar from "../partials/Sidebar";
import Header from "../partials/Header";
import FilterButton from "../components/DropdownFilter";
import Datepicker from "../components/Datepicker";
import axios from "axios";
import { useAuthProvider } from "../utils/AuthContext";
import { Table } from "flowbite-react";
import {
  
  Button,
  
} from "@material-tailwind/react";

const Exploitations = () => {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [exploitations, setExploitations] = useState([]);

  const { currentUser, changeCurrentUser } = useAuthProvider();

  useEffect(() => {
    // console.log(currentUser.token);
    axios
      .get("/api/exploitation", {
        // params: {
        //   type_notification: type_notification,
        // },
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${currentUser.token}`,
          // application/json;
        },
      })
      .then(function (response) {
        // console.log(response.data);
        setExploitations(response.data);
        // setTimeout(() => {
        //   navigate("/");
        // }, 2500);
      })
      .catch(function (error) {
        console.log(error);
      });
  }, []);

  return (
    <div className="flex h-screen overflow-hidden">
      {/* Sidebar */}
      <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />

      {/* Content area */}
      <div className="relative flex flex-col flex-1 overflow-y-auto overflow-x-hidden">
        {/*  Site header */}
        <Header sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} />

        <main className="grow">
          <div className="px-4 sm:px-6 lg:px-8 py-8 w-full max-w-9xl mx-auto">
            {/* Dashboard actions */}
            <div className="sm:flex sm:justify-between sm:items-center mb-8">
              {/* Left: Title */}
              <div className="mb-4 sm:mb-0">
                <h1 className="text-2xl md:text-3xl text-gray-800 dark:text-gray-100 font-bold">
                  Mes exploitations
                </h1>
              </div>

              {/* Right: Actions */}
              <div className="grid grid-flow-col sm:auto-cols-max justify-start sm:justify-end gap-2">
                {/* Filter button */}
                <FilterButton align="right" />
                {/* Datepicker built with flatpickr */}
                <Datepicker align="right" />
                {/* Add view button */}
                <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
                  <svg
                    className="fill-current shrink-0 xs:hidden"
                    width="16"
                    height="16"
                    viewBox="0 0 16 16"
                  >
                    <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
                  </svg>
                  <span className="max-xs:sr-only">Add View</span>
                </button>
              </div>
            </div>

            {/* Cards */}
            <section className=" w-full px-10 py-10 mx-auto rounded-xl bg-white dark:bg-gray-800">
              {/* grid grid-cols-3 gap-6 */}
              <div className="p-3 overflow-x-auto ">
                {[...exploitations].length !== 0 ? (
                  <Table hoverable>
                    <Table.Head>
                      <Table.HeadCell className="whitespace-nowrap ">Nom du produit</Table.HeadCell>
                      <Table.HeadCell className="whitespace-nowrap ">DCI du produit</Table.HeadCell>
                      <Table.HeadCell className="whitespace-nowrap ">Numero AMM</Table.HeadCell>
                      <Table.HeadCell className="whitespace-nowrap ">Nom de l'entreprise exploitante</Table.HeadCell>
                      <Table.HeadCell className="whitespace-nowrap ">Type d'exploitation</Table.HeadCell>
                      <Table.HeadCell className="whitespace-nowrap ">Action</Table.HeadCell>

                    </Table.Head>
                    <Table.Body className="divide-y">
                      {[...exploitations].map(
                        ({
                          produit,
                          exploitant,
                          exploitation,
                          
                        }) => {
                          return (
                            <Table.Row
                              key={exploitation.id}
                              className=" dark:border-gray-700 "
                            >
                              <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">
                                {produit.nom_produit}
                              </Table.Cell>
                              <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">
                                {produit.DCI}
                              </Table.Cell>
                              <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">
                                {produit.numero_AMM}
                              </Table.Cell>
                              <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">
                                {exploitant.nom}
                              </Table.Cell>
                              <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">
                                {exploitation.type_exploitation}
                              </Table.Cell>

                              <Table.Cell className="whitespace-nowrap font-medium text-gray-900 dark:text-white">
                                {/* <Button
                                //   onClick={() => {
                                //     // gestionCompte(email,"desactivation_compte")
                                //     setOpenModal(true);
                                //     setEmailSelected(email);
                                //     setStatutCompte(statut);
                                //   }}
                                  color={
                                    statut === "activé" ? "failure" : "blue"
                                  }
                                >
                                  {statut === "activé"
                                    ? "désactiver"
                                    : "activer"}
                                </Button> */}
                              </Table.Cell>
                            </Table.Row>
                          );
                        }
                      )}
                    </Table.Body>
                  </Table>
                ) : (
                  <p className=" text-xl my-4">
                    Vous n'etes affilié à aucune exploitation
                  </p>
                )}
              </div>
              
            </section>
          </div>
        </main>

        {/* <Banner /> */}
      </div>
    </div>
  );
};

export default Exploitations;
